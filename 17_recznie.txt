Register A: 33940147
Register B: 0
Register C: 0

Program: 2,4,1,5,7,5,1,6,4,2,5,5,0,3,3,0

reg["B"] = reg["A"] % 8
reg["B"] ^= 5
reg["C"] = reg["A"] // (2**reg["B"])
reg["B"] ^= 6
reg["B"] ^= reg["C"]
outputs.append(reg["B"] % 8) 5
reg["A"] //= (2**combo) 3
pointer = literal 0

B = A % 8
B ^= 5
C = A//(2**B)
B ^= 6
B ^= C
out B % 8
A //= 8
pointer = 0

out (((A%8)^5)^6)^(A//(2**((A%8)^5)))
out (((A%8)^5)^6)^(A//(2**((A%8)^5)))
A //= 8

if A = (...)[xyz]..000: out 011^(A>>5)   | .....xYZ..000
if A = (...)[xyz].001: out 010^(A>>4)    | ......xYz.001
if A = (...)[xyz]....010: out 001^(A>>7) | ...xyZ....010
if A = (...)[xyz]...011: out 000^(A>>6)  | ....xyz...011
if A = (...)[x10]0: out 111^(A>>1)       | .........X010
if A = (...)[101]: out 110^(A>>0)        | ..........011
if A = (...)[xyz]110: out 101^(A>>3)     | .......XyZ110
if A = (...)[xy1]11: out 100^(A>>2)      | ........Xy111

Żeby na początku 2 (010):
A =    .....001..000
A =    ......000.001
A =    ...011....010
A =    ....010...011
A =    .......111110

Żeby drugie 4 (100):
A =    .....001..000
A =    ......000.001
A =    ...011....010
A =    ....010...011

i

A = .....111..000...
A = ......110.001...
A = ...101....010...
A = ....100...011...
A = .......001110...

np.
A = ....100010011011